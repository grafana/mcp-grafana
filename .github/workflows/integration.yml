name: Integration Tests

on:
  push:
    branches: [main]
  pull_request:
  schedule:
    - cron: "0 0 * * *"

permissions:
  contents: read

jobs:
  test-integration:
    name: Test Integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      # Start the Grafana server.
      # Do this early so that it can start up in time for the tests to run.
      # We may need to add a wait here.
      - name: Start docker-compose services
        uses: hoverkraft-tech/compose-action@40041ff1b97dbf152cd2361138c2b03fa29139df
        with:
          compose-file: "docker-compose.yaml"

      - name: Set up Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version: "1.24"
          cache: true

      - name: Wait for Grafana server and Prometheus server to start and scrape
        run: sleep 30

      - name: Run integration tests
        run: make test-integration

  test-cloud:
    name: Test Cloud
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: Set up Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version: "1.24"
          cache: true

      - id: get-secrets
        uses: grafana/shared-workflows/actions/get-vault-secrets@5d7e361bc7e0a183cde8afe9899fb7b596d2659b # get-vault-secrets-v1.2.0
        with:
          # Secrets placed in the ci/repo/grafana/mcp-grafana/<path> path in Vault
          repo_secrets: |
            GRAFANA_API_KEY=mcptests-grafana:api-key
            ASSERTS_GRAFANA_API_KEY=dev-grafana:api-key

      - name: Run cloud tests
        env:
          GRAFANA_URL: ${{ vars.CLOUD_GRAFANA_URL }}
          ASSERTS_GRAFANA_URL: ${{ vars.ASSERTS_GRAFANA_URL }}
        run: make test-cloud
